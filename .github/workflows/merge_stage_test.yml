name: merge_stage_test

on:
  push:
    paths-ignore:
      - ".github/**.md"
      - "docker/**"
      - "docs/**"
      - 'examples/**'
      - '.dev_scripts/**'
      - "README.md"
      - "README_zh-CN.md"
      - "CONTRIBUTING.md"
      - ".pre-commit-config.yaml"
      - ".pre-commit-config-zh-cn.yaml"
    # branches:
    #   - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_without_torch:
    runs-on: ubuntu-22.04
    env:
      MMCV_WITH_OPS: 0
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y ffmpeg libturbojpeg
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Build MMCV from source
        run: pip install setuptools==78.0.1 && pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests/test_image tests/test_transforms tests/test_video tests/test_arraymisc.py tests/test_visualization.py tests/test_utils/test_env.py --ignore=tests/test_image/test_io.py
  build_without_ops:
    runs-on: ubuntu-22.04
    env:
      MMCV_WITH_OPS: 0
    strategy:
      matrix:
        python-version: ['3.10']
        torch: [1.13.0+cpu, 2.4.1]
        include:
          - torch: 1.13.0+cpu
            torchvision: 0.14.0+cpu
          - torch: 2.4.1
            torchvision: 0.19.1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y ffmpeg libturbojpeg
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Build MMCV from source
        run: pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests --ignore=tests/test_ops
  build_cpu_py:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
        torch: [2.3.1]
        include:
          - torch: 2.3.1
            torchvision: 0.18.1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y ffmpeg libturbojpeg
      - name: Upgrade pip and wheel
        run: pip install pip wheel --upgrade
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Install ninja to speed the compilation
        run: pip install ninja psutil
      - name: Build MMCV from source
        run: pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests/

  build_cpu_pt:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.10']
        # torch: [1.8.1, 1.9.1, 1.10.1, 1.11.0, 1.12.0, 1.13.0, 2.0.0, 2.1.0]
        torch: [ '1.13.0', '2.0.0', '2.1.0', '2.3.1', '2.4.1', '2.5.1']
        include:
          - setuptools: 78.0.1
          - torch: '1.13.0'
            torchvision: '0.14.0'
            python-version: '3.7'
            setuptools: '68.0.0'
          - torch: '2.0.0'
            torchvision: '0.15.1'
            python-version: '3.8'
            setuptools: 75.3.2
          - torch: '2.1.0'
            torchvision: '0.16.0'
            python-version: '3.8'
            setuptools: 75.3.2
          - torch: '2.3.1'
            torchvision: '0.18.1'
          - torch: '2.4.1'
            torchvision: '0.19.1'
          - torch: '2.5.1'
            torchvision: '0.20.1'
        exclude:
          - torch: '1.13.0'
            python-version: '3.10'
          - torch: '2.0.0'
            python-version: '3.10'
          - torch: '2.1.0'
            python-version: '3.10'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y ffmpeg libturbojpeg
      - name: Upgrade pip and wheel
        run: pip install pip wheel --upgrade
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/cpu
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Install ninja to speed the compilation
        run: pip install ninja psutil
      - name: Build MMCV from source
        run: pip install setuptools==${{matrix.setuptools}} && pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests/

  build_cu118:
    runs-on: ubuntu-22.04
    container:
      # image: pytorch/pytorch:2.3.1-cuda11.8-cudnn8-runtime
      image: nvidia/cuda:12.1.0-cudnn8-devel-ubuntu22.04
    strategy:
      matrix:
        python-version: ['3.10']
        torch: [2.3.1]
    env:
      FORCE_CUDA: 1
      MMCV_CUDA_ARGS: -gencode=arch=compute_61,code=sm_61
      #python 3.10
    steps:
      - uses: actions/checkout@v2
      - name: Install Python ${{matrix.python-version}}
        run: |
          apt-get update
          apt-get install -y wget build-essential git software-properties-common
          add-apt-repository ppa:deadsnakes/ppa -y
          apt-get update
          apt-get install -y python${{matrix.python-version}} python${{matrix.python-version}}-dev python${{matrix.python-version}}-distutils
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${{matrix.python-version}} 1
          update-alternatives --install /usr/bin/python python /usr/bin/python${{matrix.python-version}} 1
          wget https://bootstrap.pypa.io/get-pip.py
          python get-pip.py
      - name: Upgrade pip and wheel
        run: pip install pip wheel --upgrade
      - name: Install system dependencies
        run: apt-get update && apt-get install -y git ffmpeg libturbojpeg gnupg libgl1 libglib2.0-0
      - name: Fetch GPG keys
        run: |
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision -f https://download.pytorch.org/whl/cu118
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Install ninja to speed the compilation
        run: pip install ninja psutil
      - name: Build MMCV from source
        run: pip install setuptools==78.0.1 && pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests/

  build_windows_without_ops:
    runs-on: windows-2019
    env:
      MMCV_WITH_OPS: 0
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip and wheel
        run: python -m pip install pip wheel --upgrade
      - name: Install PyTorch
        run: pip install torch==1.8.1+cpu torchvision==0.9.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Install ninja to speed the compilation
        run: pip install ninja psutil
      - name: Build MMCV from source
        run: pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests --ignore=tests/test_ops --ignore tests/test_image/test_io.py

  build_windows:
    runs-on: windows-2019
    strategy:
      matrix:
        torch: [1.8.1, 2.1.0]
        include:
          - torch: 1.8.1
            torchvision: 0.9.1
            python-version: 3.7
          - torch: 2.1.0
            torchvision: 0.16.0
            python-version: 3.8
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip and wheel
        run: python -m pip install pip wheel --upgrade
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/VBTI-development/mmengine.git@main
      - name: Install ninja to speed the compilation
        run: pip install ninja psutil
      - name: Build MMCV from source
        run: pip install -e . -v
      - name: Install unit tests dependencies
        run: pip install -r requirements/test.txt
      - name: Run unit tests
        run: pytest tests/ --ignore tests/test_image/test_io.py
